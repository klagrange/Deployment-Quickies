#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Mon Oct 29 17:40:28 2018

@author: liujin
"""
import unittest
import helpers as hp
import numpy as np

class Test_helpers(unittest.TestCase):
      
    goals = [51020.40816326531, 102040.81632653062, 204081.63265306124]
    years = [6,11,16]
    ir_per_goal = [0.06,0.06,0.06]
    sigma = [0.10,0.20,0.40]
    backend_fee = [0.02,0.02,0.02]
  
    def test_calculate_pv(self):
        goal,IR,year = 50000.00,0.10,5.0
        self.assertAlmostEqual(31046.07,hp.calculate_pv(goal,year,IR),delta = 0.01)
        
    def test_calculate_fv(self):
        PV,IR,year = 31046.07,0.10,5.0
        self.assertAlmostEqual(50000.0,hp.calculate_fv(PV, year, IR),delta = 0.01)
       
    def test_calculate_ir(self):
        FV, PV, year = 50000,31046.07,5
        self.assertAlmostEqual(0.1,hp.calculate_ir(FV, PV, year),delta = 0.01)
        
    def test_calculate_probability(self):
        goal, FV, IR, NbDays, sigma = 10000,10000,0,252*10,1
        self.assertAlmostEqual(0.5,hp.calculate_probability(goal, FV, IR, NbDays, sigma),delta = 0.01)
    
    def test_probability_of_goals(self):
        goals_list =  [np.array([[0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
       [9050.8368, 3920.0000, 5130.8368, 0.0000, 0.0000, 80.0000],
       [9050.8368, 3920.0000, 5130.8368, 0.0000, 0.0000, 80.0000],
       [9050.8368, 3920.0000, 5130.8368, 0.0000, 0.0000, 80.0000],
       [9050.8368, 3920.0000, 5130.8368, 0.0000, 0.0000, 80.0000],
       [9050.8368, 3920.0000, 5130.8368, 0.0000, 0.0000, 80.0000]]), np.array([[0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
       [7741.6284, 3920.0000, 3821.6284, 0.0000, 0.0000, 80.0000],
       [7741.6284, 3920.0000, 3821.6284, 0.0000, 0.0000, 80.0000],
       [7741.6284, 3920.0000, 3821.6284, 0.0000, 0.0000, 80.0000],
       [7741.6284, 3920.0000, 3821.6284, 0.0000, 0.0000, 80.0000],
       [7741.6284, 3920.0000, 3821.6284, 0.0000, 0.0000, 80.0000],
       [12855.8292, 5880.0000, 6975.8292, 0.0000, 0.0000, 120.0000],
       [12855.8292, 5880.0000, 6975.8292, 0.0000, 0.0000, 120.0000],
       [12855.8292, 5880.0000, 6975.8292, 0.0000, 0.0000, 120.0000],
       [12855.8292, 5880.0000, 6975.8292, 0.0000, 0.0000, 120.0000],
       [12855.8292, 5880.0000, 6975.8292, 0.0000, 0.0000, 120.0000]]), np.array([[0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
       [8767.9110, 3920.0000, 4847.9110, 0.0000, 0.0000, 80.0000],
       [8767.9110, 3920.0000, 4847.9110, 0.0000, 0.0000, 80.0000],
       [8767.9110, 3920.0000, 4847.9110, 0.0000, 0.0000, 80.0000],
       [8767.9110, 3920.0000, 4847.9110, 0.0000, 0.0000, 80.0000],
       [8767.9110, 3920.0000, 4847.9110, 0.0000, 0.0000, 80.0000],
       [12480.9276, 5880.0000, 6600.9276, 0.0000, 0.0000, 120.0000],
       [12480.9276, 5880.0000, 6600.9276, 0.0000, 0.0000, 120.0000],
       [12480.9276, 5880.0000, 6600.9276, 0.0000, 0.0000, 120.0000],
       [12480.9276, 5880.0000, 6600.9276, 0.0000, 0.0000, 120.0000],
       [12480.9276, 5880.0000, 6600.9276, 0.0000, 0.0000, 120.0000],
       [21314.4577, 11760.0000, 9554.4577, 0.0000, 0.0000, 240.0000],
       [21314.4577, 11760.0000, 9554.4577, 0.0000, 0.0000, 240.0000],
       [21314.4577, 11760.0000, 9554.4577, 0.0000, 0.0000, 240.0000],
       [21314.4577, 11760.0000, 9554.4577, 0.0000, 0.0000, 240.0000],
       [21314.4577, 11760.0000, 9554.4577, 0.0000, 0.0000, 240.0000]])]
        surplus_list = [0.00, 0.00, 0.00]
        Probs_list =  [7e-06, 0.602212, 0.748585]
        listb = hp.probability_of_goals(self.goals, self.years, self.ir_per_goal, self.sigma, goals_list, surplus_list)
        self.assertListEqual(Probs_list,listb)
                      
if __name__ == '__main__':
    unittest.main()
        
        